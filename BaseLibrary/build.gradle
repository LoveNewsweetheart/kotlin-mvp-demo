apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        buildTypes {
            //公司的各种环境
            release {
                minifyEnabled false
                buildConfigField "boolean", "IS_ONLINE", "true"
                buildConfigField "String", "BUGLY_KEY", "\"xxx\""//bugly的key
                buildConfigField "String", "WMS_BASE_URL", "\"https://www.baidu.com/\""//生产环境地址
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }

            uat {
                minifyEnabled false
                buildConfigField "boolean", "IS_ONLINE", "false"
                buildConfigField "String", "BUGLY_KEY", "\"xxx\""
                buildConfigField "String", "WMS_BASE_URL", "\"https://www.baidu.com/\""
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }

            debug {
                minifyEnabled false
                buildConfigField "boolean", "IS_ONLINE", "false"
                buildConfigField "String", "BUGLY_KEY", "\"xxx\""
                buildConfigField "String", "WMS_BASE_URL", "\"https://www.baidu.com/\""
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.debug
            }
            alpha {
                minifyEnabled false
                buildConfigField "boolean", "IS_ONLINE", "false"
                buildConfigField "String", "BUGLY_KEY", "\"xxx\""
                buildConfigField "String", "WMS_BASE_URL", "\"https://www.baidu.com/\""
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.debug
            }

        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //anko
    api "org.jetbrains.anko:anko-commons:$anko_version"
    api "org.jetbrains.anko:anko-design:$anko_version" // For SnackBars
    // RxKotlin and RxAndroid
    api "io.reactivex.rxjava2:rxkotlin:$rx_kotlin_version"
    api "io.reactivex.rxjava2:rxandroid:$rx_android_version"
    //Retrofit
    api "com.squareup.okhttp3:okhttp:${ok_http_version}"
    api "com.squareup.retrofit2:retrofit:${retrofit_version}"
    api "com.squareup.okhttp3:logging-interceptor:${ok_http_version}"
    api "com.squareup.retrofit2:converter-gson:${retrofit_version}"
    api "com.squareup.retrofit2:adapter-rxjava2:$rxjava2_version"

    api('com.github.ihsanbal:LoggingInterceptor:3.1.0') {
        exclude group: 'org.json', module: 'json'
    }

    api "com.trello.rxlifecycle3:rxlifecycle-kotlin:$rxlifecycle_version"
    api "com.trello.rxlifecycle3:rxlifecycle-components:$rxlifecycle_version"
    api "pub.devrel:easypermissions:${easy_premission_version}"

    //加载图片
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    //加载刷新控件
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.2'

    api 'com.google.code.gson:gson:2.8.6'

}
